The Trot Programming Language


Trot characteristics:
---------------------
- Only has two types: list and int.
- Stack based with reverse polish notation.
- Uses the actor model for easy concurrent programming.
- Automatic garbage collection that's incremental and dynamically tunable.
- Licensed under a three-clause BSD license (see LICENSE)

This is my personal weekend project, so progress will be slow but steady.

The current version is 0.1.2.
It will be usable at version 0.3.1. (see PLAN)


Building:
---------
Just run "make"

targets:
  all      - build normal
  debug    - build for debug
  test     - run tests
  vtest    - run tests in valgrind
  coverage - generate coverage report with gcov and lcov
  clean    - cleans up files


Quality:
-----------------------
- Trot is compiled with gcc's -Wall -Werror and -Wextra.
  It compiles with 0 warnings.
- Lots of unit tests guarantee everything works correctly.
- gcov is used to make sure we get as much coverage as possible.
  Current coverage is 100% branch coverage.
- Valgrind is used to look for memory leaks and memory corruption.
  There are 0 memory leaks or errors reported.
- Compiles cleanly against C89 and C99 standards.


Documentation:
--------------
The code is documented with doxygen comments, and there's a trot.doxygen file
that can be used to generate documentation. Structures and functions are
documented, but more documentation will come about the core data structure and
the memory management algorithms.



Jeremiah Martell

